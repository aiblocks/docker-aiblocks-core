# -*- mode: toml -*-
# vi: set ft=toml :

[AiBlocksCoreMetricsInput]
type = "HttpInput"
url = "http://localhost:{{getenv (printf "%s_HTTP_PORT" (getenv "SELF"))}}/metrics"
ticker_interval = 1

[AiBlocksCoreMetricsFilter]
type = "SandboxFilter"
message_matcher = "Type == 'heka.httpinput.data'"
filename = "/heka/aiblocks_core_metrics_filter.lua"
ticker_interval = {{or (getenv "METRICS_INTERVAL") 60}}
  [AiBlocksCoreMetricsFilter.config]
  environment = "{{getenv "ENVIRONMENT"}}"
  cluster = "{{getenv "CLUSTER_NAME"}}"
  node = "{{getenv "HOSTNAME"}}"

{{if (getenv "INFLUX_ADDRESS")}}
[AiBlocksCoreMetricsInfluxOutput]
type = "HttpOutput"
message_matcher = "Type == 'heka.sandbox.aiblocks.core.metrics.influx'"
address = "{{getenv "INFLUX_ADDRESS"}}"
encoder = "PayloadEncoder"
username = "{{getenv "INFLUX_USERNAME"}}"
password = "{{getenv "INFLUX_PASSWORD"}}"
{{end}}

{{if (getenv "ATLAS_ADDRESS")}}
[AiBlocksCoreMetricsAtlasOutput]
type = "HttpOutput"
message_matcher = "Type == 'heka.sandbox.aiblocks.core.metrics.atlas'"
address = "{{getenv "ATLAS_ADDRESS"}}"
encoder = "PayloadEncoder"
  [AiBlocksCoreMetricsAtlasOutput.headers]
  Content-Type = ["application/json"]
{{end}}

{{if (getenv "CORE_ALERT_RECIPIENT")}}
[NullSplitter]

[CoreFileProcessor]
type = "ProcessInput"
ticker_interval = 30
splitter = "NullSplitter"
stdout = true
stderr = true
  [CoreFileProcessor.command.0]
  bin = "docker"
  args = ["run",
          "--net", "host",
          "-e", "CORE_ALERT_RECIPIENT={{getenv "CORE_ALERT_RECIPIENT"}}",
          "-e", "CORE_ARCHIVE_COMMAND={{getenv "CORE_ARCHIVE_COMMAND"}}",
          "-e", "CORE_LOG_FILTER={{getenv "CONTAINER_ID" | printf "%.12s"}}",
          {{if (getenv "AWS_CREDENTIAL_SOURCE")}}
          "-v", "{{getenv "AWS_CREDENTIAL_SOURCE"}}:/root/.aws:ro",
          {{end}}
          "-v", "/var/log/syslog:/host/syslog:ro",
          "--volumes-from", "{{getenv "CONTAINER_ID"}}",
          {{if (getenv "USE_SYSLOG")}}
          "--log-driver", "syslog",
          {{end}}
          "-t", "--rm",
          "aiblocks/aiblocks-core",
          "/utils/core_file_processor.py"]
{{end}}

[PayloadEncoder]

[DashboardOutput]
ticker_interval = 1

[DebugOutput]
message_matcher = "Type == 'heka.sandbox-terminated'"
type = "LogOutput"
encoder = "RstEncoder"

[RstEncoder]
